definitions:
  model.Address:
    properties:
      city:
        type: string
      country:
        type: string
      district:
        type: string
      id:
        type: string
      postal_code:
        type: integer
      user_id:
        type: string
    type: object
  model.Code:
    properties:
      code:
        type: string
    type: object
  model.Id:
    properties:
      id:
        type: string
    type: object
  model.Media:
    properties:
      id:
        type: string
      link:
        type: string
      post_id:
        type: string
      type:
        type: string
    type: object
  model.Post:
    properties:
      description:
        type: string
      id:
        type: string
      medias:
        items:
          $ref: '#/definitions/model.Media'
        type: array
      name:
        type: string
      user_id:
        type: string
    type: object
  model.User:
    properties:
      address:
        $ref: '#/definitions/model.Address'
      bio:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      login:
        type: string
      password:
        type: string
      phone_number:
        type: string
      posts:
        items:
          $ref: '#/definitions/model.Post'
        type: array
      status:
        type: boolean
      type_id:
        type: integer
    type: object
info:
  contact: {}
paths:
  /users/login:
    get:
      description: This api is for login user
      parameters:
      - description: Your mail for login
        in: path
        name: Email
        required: true
        type: string
      - description: Your password for login
        in: path
        name: Password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Code'
      summary: Logging to account
      tags:
      - auth
  /v1/users:
    post:
      consumes:
      - application/json
      description: This api is for creating user
      parameters:
      - description: user body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Create an account
      tags:
      - user
  /v1/users/{id}:
    delete:
      description: This api is for delete user
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Id'
      summary: Delete an account
      tags:
      - user
    get:
      description: This api is for getting user
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
      summary: Get an account
      tags:
      - user
  /v1/users/check:
    post:
      consumes:
      - application/json
      description: This api is for creating user
      parameters:
      - description: user body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Create an account with check
      tags:
      - auth
  /v1/users/verify/{code}:
    post:
      description: This api is for Create user
      parameters:
      - description: Verify Code
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Code'
      summary: Create an account
      tags:
      - auth
swagger: "2.0"
